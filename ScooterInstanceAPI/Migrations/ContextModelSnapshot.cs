// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using ScooterInstanceAPI.Data;

namespace ScooterInstanceAPI.Migrations
{
    [DbContext(typeof(Context))]
    partial class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("ScooterInstanceAPI.Data.Scooter", b =>
                {
                    b.Property<Guid>("ScooterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("AgeLimitMax")
                        .HasColumnType("integer");

                    b.Property<int>("AgeLimitMin")
                        .HasColumnType("integer");

                    b.Property<int>("BatteryLife")
                        .HasColumnType("integer");

                    b.Property<string>("Brand")
                        .HasColumnType("text");

                    b.Property<int>("ClimbAngle")
                        .HasColumnType("integer");

                    b.Property<string>("Model")
                        .HasColumnType("text");

                    b.Property<int>("SpeedLimit")
                        .HasColumnType("integer");

                    b.Property<int>("WeightMax")
                        .HasColumnType("integer");

                    b.HasKey("ScooterId");

                    b.ToTable("Scooter");

                    b.HasData(
                        new
                        {
                            ScooterId = new Guid("74327683-ba31-4bef-bca7-e3b23212d24d"),
                            AgeLimitMax = 25,
                            AgeLimitMin = 15,
                            BatteryLife = 50,
                            Brand = "Yamaha",
                            ClimbAngle = 85,
                            Model = "v2",
                            SpeedLimit = 500,
                            WeightMax = 150
                        });
                });

            modelBuilder.Entity("ScooterInstanceAPI.Data.ScooterInstance", b =>
                {
                    b.Property<Guid>("ScooterInstanceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("ScooterAutonomy")
                        .HasColumnType("integer");

                    b.Property<Guid?>("ScooterId")
                        .HasColumnType("uuid");

                    b.HasKey("ScooterInstanceId");

                    b.HasIndex("ScooterId");

                    b.ToTable("ScooterInstances");

                    b.HasData(
                        new
                        {
                            ScooterInstanceId = new Guid("b3451766-f082-4981-9c44-add0d8d383c3"),
                            ScooterAutonomy = 7
                        });
                });

            modelBuilder.Entity("ScooterInstanceAPI.Data.ScooterInstance", b =>
                {
                    b.HasOne("ScooterInstanceAPI.Data.Scooter", "Scooter")
                        .WithMany()
                        .HasForeignKey("ScooterId");
                });
#pragma warning restore 612, 618
        }
    }
}
