@page "/scooters"
@inject HttpClient Http
@using TrotIS.Shared
@inject NavigationManager NavigationManager
@inject Blazored.SessionStorage.ISessionStorageService sessionStorage
@if (email != null)
{
    <div class="input-group col-lg-12 mb-4">
        <div class="input-group-prepend">
            <h1>Available scooters are at: </h1>

            <select @bind="selectedLocation.LocationID" class="form-control bg-white border-left-0 border-md" placeholder="Latitude">
                @foreach (var adr in allOurLocations)
                {
                    <option value="@adr.LocationID">@adr.Comment</option>
                }
            </select>
        </div>
    </div>
}
else
{
    <h1>No usser logged in</h1>
}

@code{
    public string email = null;
    private List<Location> allOurLocations = new List<Location>();
    private Location selectedLocation = new Location();
    string URL = @"http://localhost:5009/api/locations";
    public async void GetOurLocations()
    {
        try
        {
            var result = await Http.GetAsync(URL);

            allOurLocations = await result.Content.ReadAsAsync<List<Location>>();

            this.StateHasChanged();
        }
        catch
        { }
    }

    protected async override void OnInitialized()
    {

        try
        {
            email = await sessionStorage.GetItemAsync<string>("hash");
            this.StateHasChanged();
        }
        catch{}
            GetOurLocations();
    
    }
    private class Location
    {
        public Guid LocationID { get; set; }

        [Required(ErrorMessage = "Longitude is required.")]
        public decimal Longitude { get; set; }

        [Required(ErrorMessage = "Longitude is required.")]
        public decimal Latitude { get; set; }


        public string Comment { get; set; }

        public Location()
        {
            LocationID = Guid.NewGuid();
        }

        public static Location Create(decimal longitude, decimal latitude, string comment)
        {
            return new Location
            {
                LocationID = Guid.NewGuid(),
                Longitude = longitude,
                Latitude = latitude,
                Comment = comment
            };
        }
    }



}