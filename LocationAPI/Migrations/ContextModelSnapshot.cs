// <auto-generated />
using System;
using LocationAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace LocationAPI.Migrations
{
    [DbContext(typeof(Context))]
    partial class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("LocationAPI.Data.Location", b =>
                {
                    b.Property<Guid>("LocationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Comment")
                        .HasColumnType("text");

                    b.Property<decimal>("Latitude")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Longitude")
                        .HasColumnType("numeric");

                    b.HasKey("LocationID");

                    b.ToTable("Locations");

                    b.HasData(
                        new
                        {
                            LocationID = new Guid("dd9cc90c-dd61-474d-abec-a288458eaad9"),
                            Comment = "TrotIS Center, Faculty of Computer Science",
                            Latitude = 47.1739724m,
                            Longitude = 27.5743639m
                        });
                });

            modelBuilder.Entity("LocationAPI.Data.LocationsToScooters", b =>
                {
                    b.Property<Guid>("LocationID")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ScooterInstanceID")
                        .HasColumnType("uuid");

                    b.HasKey("LocationID", "ScooterInstanceID");

                    b.ToTable("LinkLocationsToScooterInstances");

                    b.HasData(
                        new
                        {
                            LocationID = new Guid("dd9cc90c-dd61-474d-abec-a288458eaad9"),
                            ScooterInstanceID = new Guid("65a1ecd5-5ac1-434b-8c35-1bedcee04dd4")
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
